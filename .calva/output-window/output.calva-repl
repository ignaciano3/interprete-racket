; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Starting Jack-in Terminal: pushd /home/ignacio/Documents/lenguajes_formales/tp-105043-garcia-pizales ; lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- with-profile +uberjar repl :headless ; popd
; Using host:port 127.0.0.1:45561 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉tp-105043-garcia-pizales.core꞉>  ; Use `alt+enter` to evaluate
clj꞉tp-105043-garcia-pizales.core꞉> 
; Jack-in done.
clj꞉tp-105043-garcia-pizales.core꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (cargar-r (lambda () (newline))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 cargar-r (lambda () (newline))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (cargar-r (lambda () ((display "->r: ") (set! r (read)) (display "r*2: ") (display (+ r r)) (newline)))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 f (lambda (x) ((+ x 1)))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 f (lambda (x) (+ x 1))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 f (lambda (x) ((f x) (+ x 1)))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 f (lambda (x) ((f x) (+ x 1)))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 f (lambda (x) ((f x) (+ x 1) (+ x 2)))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 f (lambda (x) ((+ x 1) (+ x 2)))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define
clj꞉tp-105043-garcia-pizales.tp꞉> 
((lambda (x) ((+ x 1) (+ x 2))) (x 1))
(#<void> (x 1 f (lambda (x) ((+ x 1) (+ x 2)))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(+ x 1 + x 2)
clj꞉tp-105043-garcia-pizales.tp꞉> 
(+ x 1)
clj꞉tp-105043-garcia-pizales.tp꞉> 
((+ x 2))
clj꞉tp-105043-garcia-pizales.tp꞉> 
#function[clojure.core/map/fn--5847]
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/flatten1
clj꞉tp-105043-garcia-pizales.tp꞉> 
((+ 2 3) (+ 3 5))
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/flatten1
clj꞉tp-105043-garcia-pizales.tp꞉> 
((+ 2 3) (+ 3 5))
clj꞉tp-105043-garcia-pizales.tp꞉> 
((+ 2 3) (+ 3 5))
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/flatten1
clj꞉tp-105043-garcia-pizales.tp꞉> 
((+ 2 3) (+ 3 5))
clj꞉tp-105043-garcia-pizales.tp꞉> 
; Execution error (StackOverflowError) at tp-105043-garcia-pizales.tp/flatten1 (form-init14289119088671590232.clj:960).
; null
clj꞉tp-105043-garcia-pizales.tp꞉> 
; Syntax error compiling if at (tp.clj:960:3).
; Too many arguments to if
clj꞉tp-105043-garcia-pizales.tp꞉> 
; Syntax error compiling if at (tp.clj:960:3).
; Too many arguments to if
clj꞉tp-105043-garcia-pizales.tp꞉> 
; Syntax error compiling if at (tp.clj:960:3).
; Too many arguments to if
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/flatten1
clj꞉tp-105043-garcia-pizales.tp꞉> 
; Execution error (ClassCastException) at tp-105043-garcia-pizales.tp/flatten1 (form-init14289119088671590232.clj:960).
; class clojure.lang.Cons cannot be cast to class clojure.lang.IFn (clojure.lang.Cons and clojure.lang.IFn are in unnamed module of loader 'app')
clj꞉tp-105043-garcia-pizales.tp꞉> 
; Syntax error compiling at (tp.clj:942:3).
; Unable to resolve symbol: evaluar-define-aux in this context
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define-aux
clj꞉tp-105043-garcia-pizales.tp꞉> 
; Syntax error compiling at (tp.clj:942:23).
; Unable to resolve symbol: expre in this context
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define
clj꞉tp-105043-garcia-pizales.tp꞉> 
DEFINE: define
VARIABLE: (f x)
BODY: ((+ x 1) (+ x 2))
Amb: (x 1)
(x 1)
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define-aux
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define
clj꞉tp-105043-garcia-pizales.tp꞉> 
DEFINE: define
NOMBRE: f
Variables: (x)
BODY: ((+ x 1) (+ x 2))
Amb: (x 1)
(x 1)
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define-aux
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 f (lambda (x) ((+ x 1) (+ x 2)))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
; Execution error (IllegalArgumentException) at tp-105043-garcia-pizales.tp/evaluar-define (form-init14289119088671590232.clj:940).
; Don't know how to create ISeq from: clojure.lang.Symbol
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define-lambda
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 f (lambda (x) ((+ x 1) (+ x 2)))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define-lambda
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 f (lambda x + x 1 + x 2)))
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define-lambda
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 f (lambda x + x 1 + x 2)))
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define-lambda
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 f (lambda (x) ((+ x 1) (+ x 2)))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define-variable
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define
clj꞉tp-105043-garcia-pizales.tp꞉> 
((;ERROR:) (x 1))
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 f (lambda (x) ((+ x 1) (+ x 2)))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x (3 (x 1))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(+ 1 2 + 1 3)
clj꞉tp-105043-garcia-pizales.tp꞉> 
(+ 1 2 + 1 3)
clj꞉tp-105043-garcia-pizales.tp꞉> 
(+ 1 2 + 1 3)
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x (2 (x 1))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
((;ERROR: unbound variable: +) ())
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 f (lambda (x) (+ x 2))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 2))
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 2))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 f (lambda (x) ((+ x 1)))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(lambda x + x 1)
clj꞉tp-105043-garcia-pizales.tp꞉> 
(lambda (x) #function[clojure.core/flatten] ((+ x 1)))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(lambda (x) (+ x 1))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(lambda (x) (+ x 1 quote + x 2))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(lambda (x) (+ x 1 + x 2))
clj꞉tp-105043-garcia-pizales.tp꞉> 
; Syntax error compiling at (tp.clj:957:1).
; Unable to resolve symbol: flatten-lambda in this context
clj꞉tp-105043-garcia-pizales.tp꞉> 
; Syntax error compiling at (tp.clj:957:1).
; Unable to resolve symbol: flatten-lambda in this context
clj꞉tp-105043-garcia-pizales.tp꞉> 
; Syntax error compiling at (tp.clj:957:1).
; Unable to resolve symbol: flatten-lambda in this context
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/flatten-lambda
clj꞉tp-105043-garcia-pizales.tp꞉> 
lambda
(x)
((+ x 1) (+ x 2))
((+ x 1) (+ x 2))
clj꞉tp-105043-garcia-pizales.tp꞉> 
lambda
(x)
((+ x 1) (+ x 2))
((+ x 1) (+ x 2))
clj꞉tp-105043-garcia-pizales.tp꞉> 
lambda
(x)
((+ x 1) (+ x 2) (+ x 3))
((+ x 1) (+ x 2) (+ x 3))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 f (lambda (x) ((+ x 1)))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
; Syntax error reading source at (REPL:960:27).
; Unreadable form
clj꞉tp-105043-garcia-pizales.tp꞉> 
; Syntax error reading source at (REPL:960:24).
; Unreadable form
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/adjust-expression
clj꞉tp-105043-garcia-pizales.tp꞉> 
; Syntax error reading source at (REPL:960:24).
; Unreadable form
clj꞉tp-105043-garcia-pizales.tp꞉> 
; Syntax error reading source at (REPL:960:24).
; Unreadable form
clj꞉tp-105043-garcia-pizales.tp꞉> 
; Error printing return value (IndexOutOfBoundsException) at clojure.lang.RT/nthFrom (RT.java:924).
; null
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/flatten2
clj꞉tp-105043-garcia-pizales.tp꞉> 
(+ x 2 + x 3)
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 f (lambda (x) ((+ x 1)))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 f (lambda (x) ((+ x 1) (+ x 2)))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(lambda (x) (+ x 2) (+ x 3))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(lambda (x) (+ x 2))
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define-lambda
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 f (lambda (x) (+ x 1) (+ x 2))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 f (lambda (x) (+ x 1) (+ x 2))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1 f (lambda (x) (+ x 1))))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x 1))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(;ERROR: unbound variable: +)
clj꞉tp-105043-garcia-pizales.tp꞉> 
(+ 2 1)
clj꞉tp-105043-garcia-pizales.tp꞉> 
((;ERROR: unbound variable: +) (x 1))
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar
clj꞉tp-105043-garcia-pizales.tp꞉> 
EXPRE : (+ 2 1)
EXPRE : +
EXPRE : 2
EXPRE : 1
((;ERROR: unbound variable: +) (x 1))
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define
clj꞉tp-105043-garcia-pizales.tp꞉> 
EXPRE : (+ 2 1)
EXPRE : +
EXPRE : 2
EXPRE : 1
((;ERROR: unbound variable: +) (x 1))
clj꞉tp-105043-garcia-pizales.tp꞉> 
(#<void> (x (+ 2 1)))
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/evaluar-define
clj꞉tp-105043-garcia-pizales.tp꞉> 
EXPRE : 2
(#<void> (x 2))
clj꞉tp-105043-garcia-pizales.tp꞉> 
#'tp-105043-garcia-pizales.tp/fnc-read
clj꞉tp-105043-garcia-pizales.tp꞉> 
(hola mundo)
clj꞉tp-105043-garcia-pizales.tp꞉> 
(hola mundo)
clj꞉tp-105043-garcia-pizales.tp꞉> 
